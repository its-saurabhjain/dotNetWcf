//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.ChatServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://learningwcf.com/chat", ConfigurationName="ChatServiceReference.IChatManager", CallbackContract=typeof(ChatClient.ChatServiceReference.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://learningwcf.com/chat/IChatManager/RegisterClient")]
        void RegisterClient(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://learningwcf.com/chat/IChatManager/RegisterClient")]
        System.Threading.Tasks.Task RegisterClientAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://learningwcf.com/chat/IChatManager/SubmitMessage")]
        void SubmitMessage(ChatLibrary.ChatMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://learningwcf.com/chat/IChatManager/SubmitMessage")]
        System.Threading.Tasks.Task SubmitMessageAsync(ChatLibrary.ChatMessage msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://learningwcf.com/chat/IChatManager/SendMessage")]
        void SendMessage(ChatLibrary.ChatMessage msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : ChatClient.ChatServiceReference.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<ChatClient.ChatServiceReference.IChatManager>, ChatClient.ChatServiceReference.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(string name) {
            base.Channel.RegisterClient(name);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string name) {
            return base.Channel.RegisterClientAsync(name);
        }
        
        public void SubmitMessage(ChatLibrary.ChatMessage msg) {
            base.Channel.SubmitMessage(msg);
        }
        
        public System.Threading.Tasks.Task SubmitMessageAsync(ChatLibrary.ChatMessage msg) {
            return base.Channel.SubmitMessageAsync(msg);
        }
    }
}
